env:
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  PROVIDER_CATEGORY: ${{ github.event.client_payload.category }}
  PROVIDER_DISPLAY_NAME: ${{ github.event.client_payload.display-name }}
  PROVIDER_IS_COMPONENT: ${{ github.event.client_payload.is-component }}
  # This should always have the "pulumi-" prefix as it is set in the incoming
  # repository_dispatch event.
  PROVIDER_NAME: ${{ github.event.client_payload.project }}
  PROVIDER_SCHEMA_PATH: ${{ github.event.client_payload.schema-path }}
  PROVIDER_SHORT_NAME: ${{ github.event.client_payload.project-shortname }}
  PROVIDER_PUBLISHER_NAME: ${{ github.event.client_payload.publisher }}
  PROVIDER_VERSION: ${{ github.event.client_payload.ref }}

name: provider docs build
on:
  repository_dispatch:
    types:
      - tfgen-provider
      - non-resource-provider
      # Non-resource providers are things like awsx / cloud / kubernetesx
      # it's essentially anything that isn't using the resource based docs

jobs:

  build-provider-docs:
    if: github.event.action != 'non-resource-provider'
    runs-on: ubuntu-18.04
    steps:
      - run: echo "Building docs for a resource based provider"

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: Dispatch Event
        env:
          GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
        run: pulumictl create docs-build ${{ env.PROVIDER_NAME }} ${{ env.PROVIDER_VERSION }} -d "pulumi/registry"

  non-resource-provider-docs:
    if: github.event.action == 'non-resource-provider'
    runs-on: ubuntu-18.04
    steps:
      - run: echo "Building ${{ env.PROVIDER_NAME }} docs @ ${{ env.PROVIDER_VERSION }}"

      - run: echo "Building docs for a non-resource based provider"

      - name: checkout docs repo
        uses: actions/checkout@v2
        with:
          path: docs
      - name: checkout pulumi repo
        uses: actions/checkout@v2
        with:
          repository: pulumi/pulumi
          path: pulumi

      - name: checkout tfgen provider
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.client_payload.repo }}
          ref: ${{ env.PROVIDER_VERSION }}
          path: ${{ env.PROVIDER_NAME }}
          token: ${{ env.GITHUB_TOKEN }}

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}

      - name: Install Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.82.0'
          extended: true
      - name: setup node
        uses: actions/setup-node@v2-beta

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.pythonversion}}

      - name: Install Pipenv
        run:  pip3 install pipenv

      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{matrix.dotnetverson}}

      - run: make ensure ensure_tools
        working-directory: docs

      - name: run yarn install in nodejs sdk
        run: yarn install && yarn run tsc
        working-directory: ${{ env.PROVIDER_NAME }}/sdk/nodejs

      - name: run typedoc
        run: PKGS=${{ env.PROVIDER_SHORT_NAME }} NOBUILD=true ./scripts/run_typedoc.sh
        working-directory: docs

      - name: generate python docs
        run: ./scripts/generate_python_docs.sh "${{ env.PROVIDER_SHORT_NAME }}"
        working-directory: docs

      - name: git status
        run: git status && git diff
        working-directory: docs

      - name: Create docs PR
        uses: peter-evans/create-pull-request@v3
        with:
          path: docs
          token: ${{ secrets.PULUMI_BOT_TOKEN }}
          committer: Pulumi Bot <bot@pulumi.com>
          author: Pulumi Bot <bot@pulumi.com>
          commit-message: "Regenerate docs"
          labels: "automation/tfgen-provider-docs,automation/merge"
          title: "Regen docs ${{ env.PROVIDER_SHORT_NAME }}@${{ env.PROVIDER_VERSION }}"
          body: ""
          branch: "${{ env.PROVIDER_SHORT_NAME }}/${{ github.run_id }}-${{ github.run_number }}"
    strategy:
      matrix:
        dotnetversion:
          - 3.1.301
        goversion:
          - 1.16.x
        pythonversion:
          - "3.7"
